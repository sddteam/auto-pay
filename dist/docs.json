{
  "api": {
    "name": "AutoPayPlugin",
    "slug": "autopayplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "checkAccessibility",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "checkaccessibility"
      },
      {
        "name": "enableAccessibility",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "enableaccessibility"
      },
      {
        "name": "checkOverlayPermission",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "checkoverlaypermission"
      },
      {
        "name": "enableOverlayPermission",
        "signature": "() => Promise<any>",
        "parameters": [],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "enableoverlaypermission"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'warning', listenerFunc: (data: { message: string; }) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'warning'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { message: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerwarning-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'error', listenerFunc: (data: { message: string; }) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'error'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(data: { message: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenererror-"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removealllisteners"
      },
      {
        "name": "startAutoPay",
        "signature": "(options: PayMateOptions) => Promise<any>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "PayMateOptions"
          }
        ],
        "returns": "Promise<any>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PayMateOptions"
        ],
        "slug": "startautopay"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    },
    {
      "name": "PayMateOptions",
      "slug": "paymateoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "app",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "base64",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}