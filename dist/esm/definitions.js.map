{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface AutoPayPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  performGesture(options: { x: number, y: number }): Promise<any>;\n  navigateGCash(options: any): Promise<any>;\n  stopNavigation(options: any): Promise<any>;\n  checkAccessibility(): Promise<any>;\n  enableAccessibility(): Promise<any>;\n  checkOverlayPermission(): Promise<any>;\n  enableOverlayPermission(): Promise<any>;\n  addListener(\n    eventName: 'warning',\n    listenerFunc: (data: { message: string }) => void\n  ): Promise<PluginListenerHandle>;\n  addListener(\n    eventName: 'error',\n    listenerFunc: (data: { message: string }) => void\n  ): Promise<PluginListenerHandle>;\n  removeAllListeners(): Promise<void>;\n  startAutoPay(options: any): Promise<any>;\n}\n"]}